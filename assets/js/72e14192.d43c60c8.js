"use strict";(self.webpackChunkmerit_api_docs=self.webpackChunkmerit_api_docs||[]).push([[2814],{81953:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"quick-start","title":"Quick Start Guide","description":"Get up and running with the Merit LMS API in minutes. This guide will walk you through creating your first tenant, adding members, and setting up campaigns.","source":"@site/docs/quick-start.md","sourceDirName":".","slug":"/quick-start","permalink":"/merit-api-docs/docs/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/umersaleem90/merit-api-docs/tree/main/docs/quick-start.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/merit-api-docs/docs/intro"},"next":{"title":"Authentication","permalink":"/merit-api-docs/docs/authentication"}}');var i=t(74848),a=t(28453);const s={sidebar_position:3},o="Quick Start Guide",d={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Create Your First Tenant",id:"step-1-create-your-first-tenant",level:2},{value:"Tenant Creation Request",id:"tenant-creation-request",level:3},{value:"Request Body Properties",id:"request-body-properties",level:3},{value:"Response",id:"response",level:3},{value:"Step 2: Get Your API Key",id:"step-2-get-your-api-key",level:2},{value:"Option 1: Get API Key from Identity Service",id:"option-1-get-api-key-from-identity-service",level:3},{value:"Option 2: Login with Admin Credentials",id:"option-2-login-with-admin-credentials",level:3},{value:"Step 3: Default Configurations",id:"step-3-default-configurations",level:2},{value:"Default Tenant Configs",id:"default-tenant-configs",level:3},{value:"Configuration Details",id:"configuration-details",level:3},{value:"Step 4: Default Triggers",id:"step-4-default-triggers",level:2},{value:"Default Trigger Identifiers",id:"default-trigger-identifiers",level:3},{value:"Default Triggers",id:"default-triggers",level:3},{value:"Trigger Types",id:"trigger-types",level:3},{value:"Step 5: Create Your First Member",id:"step-5-create-your-first-member",level:2},{value:"Step 6: Create Your First Tier",id:"step-6-create-your-first-tier",level:2},{value:"Step 7: Create Your First Campaign",id:"step-7-create-your-first-campaign",level:2},{value:"Complete Example in JavaScript",id:"complete-example-in-javascript",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2},{value:"Common Next Steps",id:"common-next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"quick-start-guide",children:"Quick Start Guide"})}),"\n",(0,i.jsx)(n.p,{children:"Get up and running with the Merit LMS API in minutes. This guide will walk you through creating your first tenant, adding members, and setting up campaigns."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Basic understanding of REST APIs"}),"\n",(0,i.jsx)(n.li,{children:"cURL, Postman, or your preferred HTTP client"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"step-1-create-your-first-tenant",children:"Step 1: Create Your First Tenant"}),"\n",(0,i.jsxs)(n.p,{children:["A tenant represents your organization's workspace in Merit LMS. All resources (members, points, campaigns) belong to a tenant. Tenant creation is handled by the ",(0,i.jsx)(n.strong,{children:"Merit Identity Service"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"tenant-creation-request",children:"Tenant Creation Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST "https://develop-backend-idp-app-898785615088.us-central1.run.app/v1/tenants" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "key": "test-key2",\n    "name": "Merit",\n    "email": "admin@tintash.com",\n    "password": "123456",\n    "platformName": "lms"\n  }\'\n'})}),"\n",(0,i.jsx)(n.h3,{id:"request-body-properties",children:"Request Body Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"key"})}),": Unique identifier for your tenant (used in API calls)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"name"})}),": Display name for your organization/tenant"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"email"})}),": Admin email address (used for login and notifications)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"password"})}),": Admin password for the tenant"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"platformName"})}),': Platform identifier (should be "lms" for Merit LMS)']}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "550e8400-e29b-41d4-a716-446655440000",\n  "key": "test-key2",\n  "name": "Merit",\n  "email": "admin@tintash.com",\n  "created_at": "2024-01-01T00:00:00Z",\n  "updated_at": "2024-01-01T00:00:00Z"\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Save the ",(0,i.jsx)(n.code,{children:"tenant_id"})," - you'll need it for all subsequent requests."]}),"\n",(0,i.jsx)(n.h2,{id:"step-2-get-your-api-key",children:"Step 2: Get Your API Key"}),"\n",(0,i.jsx)(n.p,{children:"After tenant creation, you need to obtain an API key for authentication. You have two options:"}),"\n",(0,i.jsx)(n.h3,{id:"option-1-get-api-key-from-identity-service",children:"Option 1: Get API Key from Identity Service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X GET "https://develop-backend-idp-app-898785615088.us-central1.run.app/v1/api-keys" \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"option-2-login-with-admin-credentials",children:"Option 2: Login with Admin Credentials"}),"\n",(0,i.jsx)(n.p,{children:"Use the email and password you used during tenant creation to get a JWT token:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST "https://develop-backend-idp-app-898785615088.us-central1.run.app/v1/auth/login" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "email": "admin@tintash.com",\n    "password": "123456"\n  }\'\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "access_token": "your-jwt-token-here",\n  "refresh_token": "your-refresh-token-here",\n  "expires_in": 3600\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"access_token"})," as your Bearer token for all LMS API calls."]}),"\n",(0,i.jsx)(n.h2,{id:"step-3-default-configurations",children:"Step 3: Default Configurations"}),"\n",(0,i.jsx)(n.p,{children:"When a tenant is created, the following default configurations are automatically set up:"}),"\n",(0,i.jsx)(n.h3,{id:"default-tenant-configs",children:"Default Tenant Configs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const tenantConfigs = [\n  {\n    tenantId,\n    key: 'defaultCurrency',\n    value: 'USD',\n  },\n  {\n    tenantId,\n    key: 'pointToCurrencyConversionRate',\n    value: '1',\n  },\n  {\n    tenantId,\n    key: 'pointToCurrencyConversionValue',\n    value: '100',\n  },\n  {\n    tenantId,\n    key: 'pointsExpiryNotificationDays',\n    value: '2',\n  },\n  {\n    tenantId,\n    key: 'minRedeemablePoints',\n    value: '100',\n  },\n  {\n    tenantId,\n    key: 'maxRedeemablePoints',\n    value: '1000',\n  },\n  {\n    tenantId,\n    key: 'transactionRewardPercentage',\n    value: '1',\n  },\n  {\n    tenantId,\n    key: 'pointsValidityDays',\n    value: '30',\n  },\n  {\n    tenantId,\n    key: 'pointsExpiryEnabled',\n    value: 'true',\n  },\n];\n"})}),"\n",(0,i.jsx)(n.h3,{id:"configuration-details",children:"Configuration Details"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"defaultCurrency"})}),": Default currency for transactions (USD)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pointToCurrencyConversionRate"})}),": Base conversion rate (1)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pointToCurrencyConversionValue"})}),": Points per currency unit (100)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pointsExpiryNotificationDays"})}),": Days before expiry to send notifications (2)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"minRedeemablePoints"})}),": Minimum points required for redemption (100)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"maxRedeemablePoints"})}),": Maximum points that can be redeemed at once (1000)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"transactionRewardPercentage"})}),": Default reward percentage per transaction (1%)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pointsValidityDays"})}),": Days before points expire (30)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pointsExpiryEnabled"})}),": Whether points expiry is enabled (true)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"step-4-default-triggers",children:"Step 4: Default Triggers"}),"\n",(0,i.jsx)(n.p,{children:"The following triggers are automatically created for your tenant:"}),"\n",(0,i.jsx)(n.h3,{id:"default-trigger-identifiers",children:"Default Trigger Identifiers"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"export const defaultTriggerIdentifiers = {\n  REDEEM_POINTS: 'redeem_points',\n  ORDER_VALUE: 'order_value',\n  FIRST_PURCHASE: 'first_purchase',\n  SPENDING_THRESHOLD: 'spending_threshold',\n  PURCHASE_COUNT: 'purchase_count',\n  INTERNAL_TRIGGER: 'internal_trigger',\n  REFERRAL_BONUS: 'referral_bonus',\n  REFEREE_BONUS: 'referee_bonus',\n  SIGNUP_BONUS: 'signup_bonus',\n  QR_CODE_SCAN: 'qr_code_scan',\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"default-triggers",children:"Default Triggers"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"export const defaultTriggers = [\n  {\n    name: 'Redeem Points',\n    systemIdentifier: 'redeem_points',\n    type: 'BURN',\n    supportedOperators: [],\n    metadata: {},\n  },\n  {\n    name: 'Order Value',\n    systemIdentifier: 'order_value',\n    type: 'PURCHASE',\n    supportedOperators: ['=', '>=', '<=', '>', '<'],\n    metadata: {},\n  },\n  {\n    name: 'First Purchase',\n    systemIdentifier: 'first_purchase',\n    type: 'PURCHASE',\n    metadata: {},\n  },\n  {\n    name: 'Spending Threshold',\n    systemIdentifier: 'spending_threshold',\n    type: 'PURCHASE',\n    supportedOperators: ['=', '>=', '>'],\n    metadata: {},\n  },\n  {\n    name: 'Purchase Count',\n    systemIdentifier: 'purchase_count',\n    type: 'PURCHASE',\n    supportedOperators: ['=', '>=', '>'],\n    metadata: {},\n  },\n  {\n    name: 'Internal Trigger',\n    systemIdentifier: 'internal_trigger',\n    type: 'INTERNAL',\n    supportedOperators: [],\n    metadata: {},\n  },\n  {\n    name: 'Referral Bonus',\n    systemIdentifier: 'referral_bonus',\n    type: 'ACHIEVEMENT',\n    supportedOperators: [],\n    metadata: {},\n  },\n  {\n    name: 'Referee Bonus',\n    systemIdentifier: 'referee_bonus',\n    type: 'ACHIEVEMENT',\n    supportedOperators: [],\n    metadata: {},\n  },\n  {\n    name: 'Signup Bonus',\n    systemIdentifier: 'signup_bonus',\n    type: 'ACHIEVEMENT',\n    supportedOperators: [],\n    metadata: {},\n  },\n];\n"})}),"\n",(0,i.jsx)(n.h3,{id:"trigger-types",children:"Trigger Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"BURN"})}),": Points redemption and burning operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"PURCHASE"})}),": Purchase-related triggers with order value and count"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"INTERNAL"})}),": System-generated internal triggers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ACHIEVEMENT"})}),": Achievement-based triggers like referrals and signups"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"step-5-create-your-first-member",children:"Step 5: Create Your First Member"}),"\n",(0,i.jsx)(n.p,{children:"Now you can start using the LMS API. Members are the users of your loyalty program."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST "https://develop-backend-lms-app-898785615088.us-central1.run.app/tenants/550e8400-e29b-41d4-a716-446655440000/members" \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "John Doe",\n    "email": "john.doe@example.com",\n    "externalId": "CUST_001",\n    "referralCode": "JOHN123",\n    "joinDate": "2024-01-01T00:00:00Z",\n    "metadata": {\n      "source": "website_signup",\n      "preferences": {\n        "newsletter": true\n      }\n    }\n  }\'\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "550e8400-e29b-41d4-a716-446655440001",\n  "tenant_id": "550e8400-e29b-41d4-a716-446655440000",\n  "name": "John Doe",\n  "email": "john.doe@example.com",\n  "external_id": "CUST_001",\n  "referral_code": "JOHN123",\n  "join_date": "2024-01-01T00:00:00Z",\n  "points_balance": 0,\n  "total_points_earned": 0,\n  "status": "active",\n  "created_at": "2024-01-01T00:00:00Z",\n  "updated_at": "2024-01-01T00:00:00Z"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-6-create-your-first-tier",children:"Step 6: Create Your First Tier"}),"\n",(0,i.jsx)(n.p,{children:"Tiers define member levels based on points, referrals, and events."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST "https://develop-backend-lms-app-898785615088.us-central1.run.app/tenants/550e8400-e29b-41d4-a716-446655440000/tiers" \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "Bronze",\n    "minPoints": 0,\n    "minReferrals": 0,\n    "minEvents": 0,\n    "rank": 1\n  }\'\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "550e8400-e29b-41d4-a716-446655440002",\n  "tenantId": "550e8400-e29b-41d4-a716-446655440000",\n  "name": "Bronze",\n  "minPoints": 0,\n  "minReferrals": 0,\n  "minEvents": 0,\n  "rank": 1\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-7-create-your-first-campaign",children:"Step 7: Create Your First Campaign"}),"\n",(0,i.jsx)(n.p,{children:"Campaigns are the core of the automated loyalty system. Let's create a simple signup bonus campaign."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST "https://develop-backend-lms-app-898785615088.us-central1.run.app/tenants/550e8400-e29b-41d4-a716-446655440000/campaigns" \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "tenantId": "550e8400-e29b-41d4-a716-446655440000",\n    "name": "Welcome Bonus",\n    "description": "Get 100 points for signing up",\n    "type": "achievement",\n    "status": "active",\n    "startDate": "2024-01-01T00:00:00Z",\n    "endDate": "2024-12-31T23:59:59Z",\n    "rewardLimitPerMember": 1,\n    "totalRewardLimit": 1000,\n    "totalPointsLimit": 100000,\n    "priority": 1,\n    "conditionOperator": "AND"\n  }\'\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "550e8400-e29b-41d4-a716-446655440003",\n  "tenantId": "550e8400-e29b-41d4-a716-446655440000",\n  "name": "Welcome Bonus",\n  "description": "Get 100 points for signing up",\n  "type": "achievement",\n  "status": "active",\n  "startDate": "2024-01-01T00:00:00Z",\n  "endDate": "2024-12-31T23:59:59Z",\n  "rewardLimitPerMember": 1,\n  "totalRewardLimit": 1000,\n  "totalPointsLimit": 100000,\n  "priority": 1,\n  "conditionOperator": "AND",\n  "campaignSteps": "campaign_creation"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"complete-example-in-javascript",children:"Complete Example in JavaScript"}),"\n",(0,i.jsx)(n.p,{children:"Here's a complete example using Node.js:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const axios = require('axios');\n\nconst IDENTITY_SERVICE_URL = 'https://develop-backend-idp-app-898785615088.us-central1.run.app';\nconst LMS_SERVICE_URL = 'https://develop-backend-lms-app-898785615088.us-central1.run.app';\n\nasync function quickStart() {\n  try {\n    // Step 1: Create tenant\n    const tenant = await axios.post(`${IDENTITY_SERVICE_URL}/v1/tenants`, {\n      key: 'my-company-loyalty',\n      name: 'My Company',\n      email: 'admin@mycompany.com',\n      password: 'secure-password-123',\n      platformName: 'lms'\n    });\n    const tenantId = tenant.data.id;\n    console.log('\u2705 Tenant created:', tenantId);\n\n    // Step 2: Login to get JWT token\n    const login = await axios.post(`${IDENTITY_SERVICE_URL}/v1/auth/login`, {\n      email: 'admin@mycompany.com',\n      password: 'secure-password-123'\n    });\n    const jwtToken = login.data.access_token;\n    console.log('\u2705 JWT token obtained');\n\n    // Step 3: Create member\n    const member = await axios.post(`${LMS_SERVICE_URL}/tenants/${tenantId}/members`, {\n      name: 'John Doe',\n      email: 'john.doe@example.com',\n      externalId: 'CUST_001',\n      referralCode: 'JOHN123',\n      joinDate: new Date().toISOString()\n    }, {\n      headers: { 'Authorization': `Bearer ${jwtToken}` }\n    });\n    const memberId = member.data.id;\n    console.log('\u2705 Member created:', memberId);\n\n    // Step 4: Create tier\n    const tier = await axios.post(`${LMS_SERVICE_URL}/tenants/${tenantId}/tiers`, {\n      name: 'Bronze',\n      minPoints: 0,\n      minReferrals: 0,\n      minEvents: 0,\n      rank: 1\n    }, {\n      headers: { 'Authorization': `Bearer ${jwtToken}` }\n    });\n    console.log('\u2705 Tier created:', tier.data.id);\n\n    // Step 5: Create campaign\n    const campaign = await axios.post(`${LMS_SERVICE_URL}/tenants/${tenantId}/campaigns`, {\n      tenantId: tenantId,\n      name: 'Welcome Bonus',\n      description: 'Get 100 points for signing up',\n      type: 'achievement',\n      status: 'active',\n      startDate: new Date().toISOString(),\n      endDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString(),\n      rewardLimitPerMember: 1,\n      totalRewardLimit: 1000,\n      totalPointsLimit: 100000,\n      priority: 1,\n      conditionOperator: 'AND'\n    }, {\n      headers: { 'Authorization': `Bearer ${jwtToken}` }\n    });\n    console.log('\u2705 Campaign created:', campaign.data.id);\n\n  } catch (error) {\n    console.error('\u274c Error:', error.response?.data || error.message);\n  }\n}\n\nquickStart();\n"})}),"\n",(0,i.jsx)(n.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,i.jsx)(n.p,{children:"Congratulations! You've successfully:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Created a tenant with admin credentials"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Set up default configurations and triggers"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Added a member"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Created a tier"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Set up a campaign"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Now explore these next steps:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/docs/lms-v1-0/merit-lms-alpha-api",children:"API Reference (v1.0)"})})," - Explore all available endpoints"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/docs/lms-valpha/merit-lms-alpha-api",children:"API Reference (Alpha)"})})," - Explore alpha version endpoints"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"common-next-steps",children:"Common Next Steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Set up more campaigns"})," - Create campaigns for purchases, referrals, achievements"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configure campaign conditions"})," - Set up eligibility criteria for your campaigns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add campaign effects"})," - Define what rewards to give when campaigns trigger"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Create segments"})," - Group members for targeted campaigns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Set up vouchers"})," - Create promotional vouchers for members"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Implement analytics"})," - Track program performance and member engagement"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);